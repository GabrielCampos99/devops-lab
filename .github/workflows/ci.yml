name: CI Pipeline

on:
  push:
    branches:
      - main

  pull_request:
    types: [opened, labeled]
    branches:
      - main

  schedule:
    # Executa todos os dias √†s 22h13 no hor√°rio de Bras√≠lia (UTC-3 = 01:13 UTC)
    - cron: '13 1 * * *'

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # JOB AGENDADO: Apenas um console.log()
  scheduled-job:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    steps:
      - name: Rodando job agendado
        run: echo "‚úÖ Cron executada com sucesso √†s 22h13 BRT"

  # JOB DE VERIFICA√á√ÉO DE LABEL
  check-label:
    if: github.event_name == 'pull_request' && github.event.action == 'labeled'
    concurrency:
      group: label-check-${{ github.ref }}
      cancel-in-progress: false
    runs-on: ubuntu-latest
    steps:
      - name: Mostrar nome da label
        run: |
          echo "üß© Uma label foi adicionada ao PR"
          echo "üè∑Ô∏è Nome da label: ${{ github.event.label.name }}"

  # JOB DE BUILD
  build:
    if: github.event_name != 'schedule'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: './server/package-lock.json'

      - name: Install dependencies
        run: npm ci
        working-directory: ./server

      - name: Build project
        run: npm run build
        working-directory: ./server

  # JOB DE TESTE (depende do build)
  test:
    if: github.event_name != 'schedule'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
          cache-dependency-path: './server/package-lock.json'

      - name: Install dependencies
        run: npm ci
        working-directory: ./server

      - name: Run tests
        run: npm test
        working-directory: ./server
